version: 2 # use CircleCI 2.0

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/php:7.2-apache-browsers # ...with this image as the primary container; this is where all `steps` will run
        environment:
          APP_ENV: production
          APP_DEBUG: true
          APP_KEY: kjcndjjksddwdwdw
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: webform
          DB_USERNAME: root
          DB_PASSWORD: 1234
          CACHE_DRIVER: file
          QUEUE_DRIVER: sync
          SENTRY_DSN: https://b53658ff4ec749719da39905217d41e0@sentry.io/1366253
      - image: circleci/mysql:5.6-ram
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: '1234'
          MYSQL_DATABASE: webform
    working_directory: /home/circleci/project # directory where steps will run
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: initiate environment setup
          command: |
            chmod -R 777 storage #apache needs to write to logs
            cp .env.example .env
            sudo sh -c 'echo "127.0.0.1 webform.test" >> /etc/hosts' #set url for test
      - run: sudo a2enmod rewrite
      - run: sudo docker-php-ext-install mysqli pdo_mysql
      - run:
          name: Install Project Dependencies
          command: composer install -n --prefer-dist
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v2.2-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v2.2-
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v2.2-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
          name: Update Missed Dependencies
          command: composer update --prefer-dist
      - run:
          name: Database migration
          command: php artisan migrate:refresh --force
      - run: php artisan db:seed --force
      - run:
          name: Configure & start Apache
          command: sudo cp /home/circleci/project/docker/conf/circleci-default.conf /etc/apache2/sites-available/000-default.conf && sudo service apache2 start
      # end to end testing
      - run:
          name: download nodejs
          command: curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
      - run:
          name: Install nodejs
          command:  sudo apt-get install -y nodejs
      - run:
          name: Install node dependencies
          command:  npm install
      - run:
          name: run tests
          command: |
            ./node_modules/karma/bin/karma start --single-run --browsers ChromeHeadless karma.conf.js # run jasmine
            ./node_modules/stylelint/bin/stylelint.js public/assets/sass/*.scss --fix #lint css source
            sh scripts/copy_sf_design_system.sh #copy sf-design-system source files
            npm run dev # compile sass
            ./node_modules/stylelint/bin/stylelint.js public/assets/css/*.css --fix #lint compiled css
            ./vendor/bin/codecept run # run unit/api/functional tests
            cd tests/frontend #run E2E tests
            sh run_tests.sh
      - deploy:
          name: deploy builds to ${CIRCLE_BRANCH}
          working_directory: /home/circleci/project
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "ds-build@sfgov.org"
            git config user.name "Deployment Bot"
            git add public/assets/css # we should probably script this if more files need to be deployed.
            git commit --allow-empty -m "Trigger deployment [ci skip]"
            # Push quietly to prevent showing the token in log
            git push --set-upstream origin ${CIRCLE_BRANCH}